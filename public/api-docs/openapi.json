{
  "openapi": "3.0.3",
  "info": {
    "title": "Carguvi Admin API Documentation",
    "description": "API documentation for Carguvi Admin Dashboard.\n\n**Note:** This application uses Firebase as its backend service. The endpoints documented here represent \nthe Firebase Firestore collections and operations available in the application. Actual API calls are made \nthrough the Firebase SDK, not traditional REST endpoints.\n\n## Authentication\nAll endpoints require Firebase Authentication. Users must be authenticated through Firebase Auth\nbefore accessing any data.\n\n## Base URL\nFirebase Firestore: `https://carguvi-default-rtdb.europe-west1.firebasedatabase.app`\n",
    "version": "1.0.0",
    "contact": {
      "name": "Carguvi Support",
      "email": "support@carguvi.com"
    }
  },
  "servers": [
    {
      "url": "https://carguvi-default-rtdb.europe-west1.firebasedatabase.app",
      "description": "Firebase Production Server"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication operations"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Products",
      "description": "Product catalog operations"
    },
    {
      "name": "Sales",
      "description": "Sales record operations"
    },
    {
      "name": "Deliveries",
      "description": "Delivery tracking operations"
    },
    {
      "name": "Categories",
      "description": "Product category operations"
    },
    {
      "name": "Vehicles",
      "description": "Vehicle data operations"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "operationId": "loginUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 6
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User logout",
        "description": "Sign out the current user",
        "operationId": "logoutUser",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users",
        "description": "Retrieve a list of all users ordered by creation date",
        "operationId": "getUsers",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "createdAt"
            },
            "description": "Field to order results by"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of results to return"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID",
        "operationId": "getUserById",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The user ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products",
        "description": "Retrieve a list of all products",
        "operationId": "getProducts",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by category"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of results"
          }
        ],
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "description": "Add a new product to the catalog",
        "operationId": "createProduct",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/products/{productId}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get product by ID",
        "description": "Retrieve a specific product",
        "operationId": "getProductById",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update product",
        "description": "Update an existing product",
        "operationId": "updateProduct",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Product not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete product",
        "description": "Remove a product from the catalog",
        "operationId": "deleteProduct",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Product not found"
          }
        }
      }
    },
    "/sales": {
      "get": {
        "tags": [
          "Sales"
        ],
        "summary": "Get all sales",
        "description": "Retrieve a list of all sales ordered by timestamp",
        "operationId": "getSales",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "timestamp"
            },
            "description": "Field to order results by"
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter sales from this date"
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Filter sales until this date"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of sales",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Sale"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      },
      "post": {
        "tags": [
          "Sales"
        ],
        "summary": "Create a new sale",
        "description": "Record a new sale transaction",
        "operationId": "createSale",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaleInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sale created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sale"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/deliveries": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Get all deliveries",
        "description": "Retrieve a list of all deliveries ordered by timestamp",
        "operationId": "getDeliveries",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "timestamp"
            },
            "description": "Field to order results by"
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "in_transit",
                "delivered",
                "cancelled"
              ]
            },
            "description": "Filter by delivery status"
          },
          {
            "name": "bikerId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Filter by biker ID"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of deliveries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Delivery"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      },
      "post": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Create a new delivery",
        "description": "Create a new delivery request",
        "operationId": "createDelivery",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Delivery created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delivery"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/deliveries/{deliveryId}": {
      "get": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Get delivery by ID",
        "description": "Retrieve a specific delivery",
        "operationId": "getDeliveryById",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delivery details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delivery"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Delivery not found"
          }
        }
      },
      "patch": {
        "tags": [
          "Deliveries"
        ],
        "summary": "Update delivery status",
        "description": "Update the status of a delivery",
        "operationId": "updateDeliveryStatus",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "parameters": [
          {
            "name": "deliveryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "in_transit",
                      "delivered",
                      "cancelled"
                    ]
                  },
                  "bikerId": {
                    "type": "string",
                    "description": "Assign or update biker"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delivery updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Delivery"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          },
          "404": {
            "description": "Delivery not found"
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "description": "Retrieve a list of all product categories",
        "operationId": "getCategories",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create a new category",
        "description": "Add a new product category",
        "operationId": "createCategory",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/vehicles/makes": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get vehicle makes",
        "description": "Retrieve a list of all vehicle manufacturers",
        "operationId": "getVehicleMakes",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of vehicle makes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleMake"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    },
    "/vehicles/types": {
      "get": {
        "tags": [
          "Vehicles"
        ],
        "summary": "Get vehicle types",
        "description": "Retrieve a list of all vehicle types",
        "operationId": "getVehicleTypes",
        "security": [
          {
            "firebaseAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of vehicle types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "firebaseAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Firebase Authentication Token"
      }
    },
    "schemas": {
      "AuthResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "uid": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "Firebase ID token"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "displayName": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user",
              "vendor",
              "biker"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "phone": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "suspended"
            ]
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "category": {
            "type": "string"
          },
          "stock": {
            "type": "integer"
          },
          "imageUrl": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "vehicleMake": {
            "type": "string"
          },
          "vehicleModel": {
            "type": "string"
          },
          "vehicleYear": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductInput": {
        "type": "object",
        "required": [
          "name",
          "price",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "float"
          },
          "category": {
            "type": "string"
          },
          "stock": {
            "type": "integer"
          },
          "imageUrl": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "vehicleMake": {
            "type": "string"
          },
          "vehicleModel": {
            "type": "string"
          },
          "vehicleYear": {
            "type": "string"
          }
        }
      },
      "Sale": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "number",
            "format": "float"
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "mobile_money",
              "bank_transfer"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "completed",
              "cancelled",
              "refunded"
            ]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "SaleInput": {
        "type": "object",
        "required": [
          "productId",
          "customerId",
          "quantity",
          "unitPrice"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "quantity": {
            "type": "integer"
          },
          "unitPrice": {
            "type": "number",
            "format": "float"
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "mobile_money",
              "bank_transfer"
            ]
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "Delivery": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "productId": {
            "type": "string"
          },
          "productName": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerAddress": {
            "type": "string"
          },
          "customerPhone": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "vendorName": {
            "type": "string"
          },
          "vendorAddress": {
            "type": "string"
          },
          "bikerId": {
            "type": "string",
            "nullable": true
          },
          "bikerName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "assigned",
              "picked_up",
              "in_transit",
              "delivered",
              "cancelled"
            ]
          },
          "distance": {
            "type": "number",
            "format": "float"
          },
          "deliveryFee": {
            "type": "number",
            "format": "float"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "pickupTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deliveryTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "DeliveryInput": {
        "type": "object",
        "required": [
          "productId",
          "customerId",
          "customerAddress",
          "vendorId",
          "vendorAddress"
        ],
        "properties": {
          "productId": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerAddress": {
            "type": "string"
          },
          "customerPhone": {
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "vendorAddress": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "float"
          },
          "deliveryFee": {
            "type": "number",
            "format": "float"
          },
          "notes": {
            "type": "string"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CategoryInput": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          }
        }
      },
      "VehicleMake": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          }
        }
      },
      "VehicleType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object"
          }
        }
      }
    }
  }
}
